/**
 *
 * @param schema: form schema generated by the gateway
 * @param data: form data generated by react-hook-form
 */
export const mutateObjectFormData = (schema: any, data: any) => {
  const objectValues = [];

  for (const [key, _value] of Object.entries(data)) {
    const attributes = schema.attributes;
    const value = _value as any;

    const currentAttributeIndex = attributes.findIndex((a: any) => a.name === key);

    if (currentAttributeIndex === -1) continue;

    const objectValue: any = {
      attribute: `/admin/attributes/${attributes[currentAttributeIndex].id}`,
      stringValue: `${value}`,
    };

    switch (attributes[currentAttributeIndex].type) {
      case "string":
        break;
      case "integer":
        if (value) objectValue.integerValue = parseInt(value, 10);
        break;
      default:
        console.log(attributes[currentAttributeIndex].type);
        break;
    }

    objectValues.push(objectValue);
  }

  const objects = schema.attributes.filter((a: any) => a.type === "object");

  return {
    entity: `/admin/entities/${schema.id}`,
    objectValues,
    objects: objects.map((o: any) => `/admin/object_entities/${o.id}`),
  };
};
